"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[906],{5994:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"get-started","title":"Get started","description":"Requirements","source":"@site/docs/get-started.md","sourceDirName":".","slug":"/get-started","permalink":"/react-native-health-connect/docs/get-started","draft":false,"unlisted":false,"editUrl":"https://github.com/matinzd/react-native-health-connect/tree/main/docs/docs/get-started.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Get started"},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/react-native-health-connect/docs/intro"},"next":{"title":"Permissions","permalink":"/react-native-health-connect/docs/permissions"}}');var a=t(4848),o=t(8453);const s={sidebar_position:2,title:"Get started"},r=void 0,c={},l=[{value:"Requirements",id:"requirements",level:2},{value:"Installation",id:"installation",level:2},{value:"Expo installation",id:"expo-installation",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,a.jsxs)(n.p,{children:["Make sure you have React Native version 0.71 or higher ",(0,a.jsx)(n.strong,{children:"with the latest patch"})," installed to use v2 of React Native Health Connect."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://play.google.com/store/apps/details?id=com.google.android.apps.healthdata&hl=en&gl=US",children:"Health Connect"})," needs to be installed on the user's device. Starting from Android 14 (Upside Down Cake), Health Connect is part of the Android Framework. Read more ",(0,a.jsx)(n.a,{href:"https://developer.android.com/health-and-fitness/guides/health-connect/develop/get-started#step-1",children:"here"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Health Connect API requires ",(0,a.jsx)(n.code,{children:"minSdkVersion=26"})," (Android Oreo / 8.0)."]}),"\n",(0,a.jsxs)(n.li,{children:["If you are planning to release your app on Google Play, you will need to submit a ",(0,a.jsx)(n.a,{href:"https://docs.google.com/forms/d/1LFjbq1MOCZySpP5eIVkoyzXTanpcGTYQH26lKcrQUJo/viewform?edit_requested=true",children:"declaration form"}),". Approval can take up to 7 days."]}),"\n",(0,a.jsx)(n.li,{children:"Approval does not grant you immediate access to Health Connect. A whitelist must propagate to the Health Connect servers, which take an additional 5-7 business days. The whitelist is updated every Monday according to Google Fit AHP support."}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"Health Connect does not appear on the Home screen by default. To open Health Connect, go to Settings > Apps > Health Connect, or add Health Connect to your Quick Settings menu."})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"Health Connect requires the user to have screen lock enabled with a PIN, pattern, or password so that the health data being stored within Health connect is protected from malicious parties while the device is locked. Please go to Settings > Security > Screen lock to set a screen lock."})}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.p,{children:"To install react-native-health-connect, use the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install react-native-health-connect\n"})}),"\n",(0,a.jsxs)(n.p,{children:["If you are using React Native CLI template, for version 2 onwards, please add the following code into your ",(0,a.jsx)(n.code,{children:"MainActivity.kt"})," within the ",(0,a.jsx)(n.code,{children:"onCreate"})," method:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",children:'package com.healthconnectexample\n\n+ import android.os.Bundle\nimport com.facebook.react.ReactActivity\nimport com.facebook.react.ReactActivityDelegate\nimport com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled\nimport com.facebook.react.defaults.DefaultReactActivityDelegate\n+ import dev.matinzd.healthconnect.permissions.HealthConnectPermissionDelegate\n\nclass MainActivity : ReactActivity() {\n  /**\n   * Returns the name of the main component registered from JavaScript. This is used to schedule\n   * rendering of the component.\n   */\n  override fun getMainComponentName(): String = "HealthConnectExample"\n\n+ override fun onCreate(savedInstanceState: Bundle?) {\n+   super.onCreate(savedInstanceState)\n+   // In order to handle permission contract results, we need to set the permission delegate.\n+   HealthConnectPermissionDelegate.setPermissionDelegate(this)\n+ }\n\n  /**\n   * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]\n   * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]\n   */\n  override fun createReactActivityDelegate(): ReactActivityDelegate =\n    DefaultReactActivityDelegate(this, mainComponentName, fabricEnabled)\n}\n\n'})}),"\n",(0,a.jsxs)(n.p,{children:["If you are using a Java based react native project, please add the following code into your ",(0,a.jsx)(n.code,{children:"MainActivity.java"})," within the ",(0,a.jsx)(n.code,{children:"onCreate"})," method:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",children:'package com.healthconnectexample\n\n+ import android.os.Bundle\nimport com.facebook.react.ReactActivity\nimport com.facebook.react.ReactActivityDelegate\nimport com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled\nimport com.facebook.react.defaults.DefaultReactActivityDelegate\n+ import dev.matinzd.healthconnect.permissions.HealthConnectPermissionDelegate\n\nclass MainActivity : ReactActivity() {\n  /**\n   * Returns the name of the main component registered from JavaScript. This is used to schedule\n   * rendering of the component.\n   */\n  override fun getMainComponentName(): String = "HealthConnectExample"\n\n+ override fun onCreate(savedInstanceState: Bundle?) {\n+   super.onCreate(savedInstanceState)\n+   // In order to handle permission contract results, we need to set the permission delegate.\n+   HealthConnectPermissionDelegate.INSTANCE.setPermissionDelegate(this, "com.google.android.apps.healthdata");\n+ }\n\n  /**\n   * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]\n   * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]\n   */\n  override fun createReactActivityDelegate(): ReactActivityDelegate =\n    DefaultReactActivityDelegate(this, mainComponentName, fabricEnabled)\n}\n\n'})}),"\n",(0,a.jsxs)(n.p,{children:["You also need to setup permissions in your ",(0,a.jsx)(n.code,{children:"AndroidManifest.xml"})," file. For more information, check ",(0,a.jsx)(n.a,{href:"https://matinzd.github.io/react-native-health-connect/docs/permissions",children:"here"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"expo-installation",children:"Expo installation"}),"\n",(0,a.jsxs)(n.p,{children:["This package cannot be used in the ",(0,a.jsx)(n.a,{href:"https://expo.io/client",children:"Expo Go"})," app, but it can be used with custom managed apps.\nJust add the ",(0,a.jsx)(n.a,{href:"https://docs.expo.io/guides/config-plugins/",children:"config plugin"})," to the ",(0,a.jsx)(n.a,{href:"https://docs.expo.io/versions/latest/config/app/#plugins",children:(0,a.jsx)(n.code,{children:"plugins"})})," array of your ",(0,a.jsx)(n.code,{children:"app.json"})," or ",(0,a.jsx)(n.code,{children:"app.config.js"}),":"]}),"\n",(0,a.jsxs)(n.p,{children:["First install the package with yarn, npm, or ",(0,a.jsx)(n.a,{href:"https://docs.expo.io/workflow/expo-cli/#expo-install",children:(0,a.jsx)(n.code,{children:"expo install"})}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"npm install expo-health-connect\nnpm install expo-build-properties --save-dev\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Then add the prebuild ",(0,a.jsx)(n.a,{href:"https://docs.expo.io/guides/config-plugins/",children:"config plugin"})," to the ",(0,a.jsx)(n.a,{href:"https://docs.expo.io/versions/latest/config/app/#plugins",children:(0,a.jsx)(n.code,{children:"plugins"})})," array of your ",(0,a.jsx)(n.code,{children:"app.json"})," or ",(0,a.jsx)(n.code,{children:"app.config.js"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "expo": {\n    "plugins": ["expo-health-connect"]\n  }\n}\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Edit your app.json again and add this"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "expo": {\n    ...\n    "plugins": [\n      [\n        "expo-build-properties",\n        {\n          "android": {\n            "compileSdkVersion": 34,\n            "targetSdkVersion": 34,\n            "minSdkVersion": 26\n          },\n        }\n      ]\n    ]\n   ...\n  }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Then rebuild the native app:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Run ",(0,a.jsx)(n.code,{children:"expo prebuild"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["This will apply the config plugin using ",(0,a.jsx)(n.a,{href:"https://expo.fyi/prebuilding",children:"prebuilding"}),"."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Rebuild the app","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"yarn android"})," -- Build on Android."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["If the project doesn't build correctly with ",(0,a.jsx)(n.code,{children:"yarn android"}),", please file an issue and try setting the project up manually."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Finally create a new EAS development build"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"eas build --profile development --platform android"})}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.p,{children:"A quick example at a glance:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import {\n  initialize,\n  requestPermission,\n  readRecords,\n} from 'react-native-health-connect';\n\nconst readSampleData = async () => {\n  // initialize the client\n  const isInitialized = await initialize();\n\n  // request permissions\n  const grantedPermissions = await requestPermission([\n    { accessType: 'read', recordType: 'ActiveCaloriesBurned' },\n  ]);\n\n  // check if granted\n\n  const { records } = await readRecords('ActiveCaloriesBurned', {\n    timeRangeFilter: {\n      operator: 'between',\n      startTime: '2023-01-09T12:00:00.405Z',\n      endTime: '2023-01-09T23:53:15.405Z',\n    },\n  });\n  // {\n  //   records: [\n  //     {\n  //       startTime: '2023-01-09T12:00:00.405Z',\n  //       endTime: '2023-01-09T23:53:15.405Z',\n  //       energy: {\n  //         inCalories: 15000000,\n  //         inJoules: 62760000.00989097,\n  //         inKilojoules: 62760.00000989097,\n  //         inKilocalories: 15000,\n  //       },\n  //       metadata: {\n  //         id: '239a8cfd-990d-42fc-bffc-c494b829e8e1',\n  //         lastModifiedTime: '2023-01-17T21:06:23.335Z',\n  //         clientRecordId: null,\n  //         dataOrigin: 'com.healthconnectexample',\n  //         clientRecordVersion: 0,\n  //         device: 0,\n  //       },\n  //     },\n  //   ],\n  // }\n};\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(6540);const a={},o=i.createContext(a);function s(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);