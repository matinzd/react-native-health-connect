"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[498],{6122:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api/methods/backgroundAccessPermission","title":"Background Access Permission","description":"Health Connect provides a special permission that allows your app to read health data in the background. This is useful for apps that need to monitor health data continuously, such as fitness tracking apps.","source":"@site/docs/api/methods/17-backgroundAccessPermission.md","sourceDirName":"api/methods","slug":"/api/methods/backgroundAccessPermission","permalink":"/react-native-health-connect/docs/api/methods/backgroundAccessPermission","draft":false,"unlisted":false,"editUrl":"https://github.com/matinzd/react-native-health-connect/tree/main/docs/docs/api/methods/17-backgroundAccessPermission.md","tags":[],"version":"current","sidebarPosition":17,"frontMatter":{"title":"Background Access Permission"},"sidebar":"tutorialSidebar","previous":{"title":"requestExerciseRoute","permalink":"/react-native-health-connect/docs/api/methods/requestExerciseRoute"},"next":{"title":"Exceptions","permalink":"/react-native-health-connect/docs/api/exceptions"}}');var o=n(4848),t=n(8453);const r={title:"Background Access Permission"},a="Background Access Permission",c={},d=[{value:"Setup",id:"setup",level:2},{value:"1. Add the permission to your AndroidManifest.xml",id:"1-add-the-permission-to-your-androidmanifestxml",level:3},{value:"2. Request the permission in your app",id:"2-request-the-permission-in-your-app",level:3},{value:"Android Implementation",id:"android-implementation",level:2},{value:"Checking for Background Access",id:"checking-for-background-access",level:2},{value:"Important Notes",id:"important-notes",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"background-access-permission",children:"Background Access Permission"})}),"\n",(0,o.jsx)(s.p,{children:"Health Connect provides a special permission that allows your app to read health data in the background. This is useful for apps that need to monitor health data continuously, such as fitness tracking apps."}),"\n",(0,o.jsx)(s.h2,{id:"setup",children:"Setup"}),"\n",(0,o.jsx)(s.h3,{id:"1-add-the-permission-to-your-androidmanifestxml",children:"1. Add the permission to your AndroidManifest.xml"}),"\n",(0,o.jsxs)(s.p,{children:["First, you need to declare the background access permission in your app's ",(0,o.jsx)(s.code,{children:"AndroidManifest.xml"})," file:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-xml",children:'<uses-permission android:name="android.permission.health.READ_HEALTH_DATA_IN_BACKGROUND"/>\n'})}),"\n",(0,o.jsx)(s.h3,{id:"2-request-the-permission-in-your-app",children:"2. Request the permission in your app"}),"\n",(0,o.jsx)(s.p,{children:"Then, include the background access permission in your permission request:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-ts",children:"import { requestPermission } from 'react-native-health-connect';\n\nconst requestPermissions = () => {\n  requestPermission([\n    {\n      accessType: 'read',\n      recordType: 'BackgroundAccessPermission',\n    },\n    // Other permissions...\n  ]).then((permissions) => {\n    console.log('Granted permissions ', { permissions });\n  });\n};\n"})}),"\n",(0,o.jsx)(s.h2,{id:"android-implementation",children:"Android Implementation"}),"\n",(0,o.jsxs)(s.p,{children:["Under the hood, this permission maps to ",(0,o.jsx)(s.code,{children:"HealthPermission.PERMISSION_READ_HEALTH_DATA_IN_BACKGROUND"})," in the Android Health Connect API. This permission allows your app to read health data even when it's not in the foreground."]}),"\n",(0,o.jsx)(s.h2,{id:"checking-for-background-access",children:"Checking for Background Access"}),"\n",(0,o.jsxs)(s.p,{children:["You can check if your app has been granted background access permission using the ",(0,o.jsx)(s.code,{children:"getGrantedPermissions"})," method:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-ts",children:"import { getGrantedPermissions } from 'react-native-health-connect';\n\nconst checkBackgroundAccess = async () => {\n  const permissions = await getGrantedPermissions();\n  const hasBackgroundAccess = permissions.some(\n    (permission) =>\n      permission.accessType === 'read' &&\n      permission.recordType === 'BackgroundAccessPermission'\n  );\n\n  console.log('Has background access:', hasBackgroundAccess);\n};\n"})}),"\n",(0,o.jsx)(s.h2,{id:"important-notes",children:"Important Notes"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"Background access is a powerful permission that should be used responsibly"}),"\n",(0,o.jsx)(s.li,{children:"Make sure to explain to users why your app needs background access to their health data"}),"\n",(0,o.jsx)(s.li,{children:"This permission is only available on Android devices with Health Connect support"}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>a});var i=n(6540);const o={},t=i.createContext(o);function r(e){const s=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);