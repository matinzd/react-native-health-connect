"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[639],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),l=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return i.createElement(p.Provider,{value:t},e.children)},h="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=l(n),u=r,m=h["".concat(p,".").concat(u)]||h[u]||d[u]||o;return n?i.createElement(m,a(a({ref:t},c),{},{components:n})):i.createElement(m,a({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[h]="string"==typeof e?e:r,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5909:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(7462),r=(n(7294),n(3905));const o={sidebar_position:3,title:"Exceptions"},a=void 0,s={unversionedId:"api/exceptions",id:"api/exceptions",title:"Exceptions",description:"Exceptions",source:"@site/docs/api/exceptions.md",sourceDirName:"api",slug:"/api/exceptions",permalink:"/react-native-health-connect/docs/api/exceptions",draft:!1,editUrl:"https://github.com/matinzd/react-native-health-connect/tree/main/docs/docs/api/exceptions.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Exceptions"},sidebar:"tutorialSidebar",previous:{title:"requestExerciseRoute",permalink:"/react-native-health-connect/docs/api/methods/requestExerciseRoute"},next:{title:"Contributing",permalink:"/react-native-health-connect/docs/contributing"}},p={},l=[{value:"Exceptions",id:"exceptions",level:2}],c={toc:l};function h(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"exceptions"},"Exceptions"),(0,r.kt)("p",null,"The SDK throws exceptions for operations when an issue is encountered and you should make sure that these are appropriately caught and handled. Each exception contains a code and a message that describes the error. In general, the following exceptions may occur:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PERMISSION_ERROR")," - This exception is thrown when the SDK does not have the required permissions to perform the operation. You need to define nessesary permissions inside your application manifest as described ",(0,r.kt)("a",{parentName:"li",href:"/react-native-health-connect/docs/permissions"},"here"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SDK_VERSION_ERROR")," - This exception is thrown when the SDK version is incompatible with the service or the operation being performed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IO_EXCEPTION")," - This exception is thrown when there is an issue with input/output operations, such as file reading or writing."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SERVICE_UNAVAILABLE")," - This exception is thrown when the service that the SDK is trying to connect to is unavailable on device or not supported."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ARGUMENT_VALIDATION_ERROR")," - This exception is thrown when one or more of the arguments passed to a method is invalid."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"UNDERLYING_ERROR")," - This exception is thrown when there is an error with the underlying service or technology the SDK is using."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INVALID_RECORD_TYPE")," - This exception is thrown when the type of record passed to a method is not valid."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CLIENT_NOT_INITIALIZED")," - This exception is thrown when the SDK client has not been properly initialized."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INVALID_TEMPERATURE")," - This exception is thrown when an invalid temperature value is passed to a method."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INVALID_ENERGY")," - This exception is thrown when an invalid energy value is passed to a method."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INVALID_BLOOD_GLUCOSE_LEVEL")," - This exception is thrown when an invalid blood glucose value is passed to a method."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INVALID_BLOOD_PRESSURE")," - This exception is thrown when an invalid blood pressure value is passed to a method."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INVALID_MASS")," - This exception is thrown when an invalid mass value is passed to a method."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AGGREGATION_NOT_SUPPORTED")," - This exception is thrown for some records that does not support aggregation metrics."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"UNKNOWN_ERROR")," - This exception is thrown when the SDK encounters an error that is not covered by any other specific exception.")))}h.isMDXComponent=!0}}]);