"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[564],{5307:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"api/methods/requestExerciseRoute","title":"requestExerciseRoute","description":"Health Connect requires users\' permission to access routes for exercise records (see Android docs). When exercise records are fetched, they will include an exerciseRoute field with a type (and possibly a route). This method should be called to request permissions to fetch the route if the type is ExerciseRouteResultType.CONSENT_REQUIRED.","source":"@site/docs/api/methods/16-requestExerciseRoute.md","sourceDirName":"api/methods","slug":"/api/methods/requestExerciseRoute","permalink":"/react-native-health-connect/docs/api/methods/requestExerciseRoute","draft":false,"unlisted":false,"editUrl":"https://github.com/matinzd/react-native-health-connect/tree/main/docs/docs/api/methods/16-requestExerciseRoute.md","tags":[],"version":"current","sidebarPosition":16,"frontMatter":{"title":"requestExerciseRoute"},"sidebar":"tutorialSidebar","previous":{"title":"openHealthConnectDataManagement","permalink":"/react-native-health-connect/docs/api/methods/openHealthConnectDataManagement"},"next":{"title":"Background Access Permission","permalink":"/react-native-health-connect/docs/api/methods/backgroundAccessPermission"}}');var n=r(4848),o=r(8453);const i={title:"requestExerciseRoute"},c="requestExerciseRoute",d={},a=[];function l(e){const s={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"requestexerciseroute",children:(0,n.jsx)(s.code,{children:"requestExerciseRoute"})})}),"\n",(0,n.jsxs)(s.p,{children:["Health Connect requires users' permission to access routes for exercise records (",(0,n.jsx)(s.a,{href:"https://developer.android.com/health-and-fitness/guides/health-connect/develop/exercise-routes",children:"see Android docs"}),"). When exercise records are fetched, they will include an ",(0,n.jsx)(s.code,{children:"exerciseRoute"})," field with a ",(0,n.jsx)(s.code,{children:"type"})," (and possibly a ",(0,n.jsx)(s.code,{children:"route"}),"). This method should be called to request permissions to fetch the route if the ",(0,n.jsx)(s.code,{children:"type"})," is ",(0,n.jsx)(s.code,{children:"ExerciseRouteResultType.CONSENT_REQUIRED"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["NOTE: To read exercise routes, you need to declare the required permissions in your app's ",(0,n.jsx)(s.code,{children:"AndroidManifest.xml"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-xml",children:'<application>\n  <uses-permission\nandroid:name="android.permission.health.READ_EXERCISE_ROUTES" />\n  <uses-permission\nandroid:name="android.permission.health.READ_EXERCISE" />\n...\n</application>\n'})}),"\n",(0,n.jsx)(s.h1,{id:"method",children:"Method"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"requestExerciseRoute(recordId: string): Promise<ExerciseRoute>\n"})}),"\n",(0,n.jsx)(s.h1,{id:"example",children:"Example"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'import {\n  requestExerciseRoute,\n  readRecord,\n  ExerciseRouteResultType,\n} from "react-native-health-connect";\n\nconst recordId = "6bd8109d-349b-319a-890a-c5a20902b530";\n\nreadRecord("ExerciseSession", recordId)\n  .then((exercise) => {\n    console.log("Exercise record: ", JSON.stringify(exercise, null, 2));\n\n    // Check if consent is required to read route:\n    if (\n      exercise.exerciseRoute.type === ExerciseRouteResultType.CONSENT_REQUIRED\n    ) {\n      requestExerciseRoute(recordId).then(({ route }) => {\n        if (route) {\n          console.log(JSON.stringify(route, null, 2));\n        } else {\n          console.log("User denied access");\n        }\n      });\n    }\n  })\n  .catch((err) => {\n    console.error("Error reading exercise record", { err });\n  });\n  \n'})})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>c});var t=r(6540);const n={},o=t.createContext(n);function i(e){const s=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);