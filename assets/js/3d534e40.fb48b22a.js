"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[891],{4775:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>c,metadata:()=>a,toc:()=>s});const a=JSON.parse('{"id":"api/methods/aggregateRecord","title":"aggregateRecord","description":"Reads aggregated result according to requested read criteria, for e.g, data origin filter and within a time range. Some record types do not support aggregation.","source":"@site/docs/api/methods/09-aggregateRecord.md","sourceDirName":"api/methods","slug":"/api/methods/aggregateRecord","permalink":"/react-native-health-connect/docs/api/methods/aggregateRecord","draft":false,"unlisted":false,"editUrl":"https://github.com/matinzd/react-native-health-connect/tree/main/docs/docs/api/methods/09-aggregateRecord.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"title":"aggregateRecord"},"sidebar":"tutorialSidebar","previous":{"title":"readRecord","permalink":"/react-native-health-connect/docs/api/methods/readRecord"},"next":{"title":"aggregateGroupByDuration","permalink":"/react-native-health-connect/docs/api/methods/aggregateGroupByDuration"}}');var n=r(4848),o=r(8453);const c={title:"aggregateRecord"},i="aggregateRecord",d={},s=[];function g(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"aggregaterecord",children:(0,n.jsx)(t.code,{children:"aggregateRecord"})})}),"\n",(0,n.jsx)(t.p,{children:"Reads aggregated result according to requested read criteria, for e.g, data origin filter and within a time range. Some record types do not support aggregation."}),"\n",(0,n.jsx)(t.h1,{id:"method",children:"Method"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"aggregateRecord<T extends AggregateResultRecordType>(\n    request: AggregateRequest<T>\n): Promise<AggregateResult<T>>\n"})}),"\n",(0,n.jsx)(t.h1,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:'import { aggregateRecord } from \'react-native-health-connect\';\n\nconst aggregateSampleData = () => {\n  aggregateRecord({\n    recordType: \'ActiveCaloriesBurned\',\n    timeRangeFilter: {\n      operator: \'between\',\n      startTime: \'2023-01-09T12:00:00.405Z\',\n      endTime: \'2023-01-09T23:53:15.405Z\',\n    },\n  }).then((result) => {\n    console.log(\'Aggregated record: \', { result }); // Aggregated record:  {"result": {"dataOrigins": ["com.healthconnectexample"], "inCalories": 15000000, "inJoules": 62760000.00989097, "inKilocalories": 15000, "inKilojoules": 62760.00000989097}}\n  });\n};\n'})})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>i});var a=r(6540);const n={},o=a.createContext(n);function c(e){const t=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);