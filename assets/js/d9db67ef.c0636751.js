"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[636],{4138:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"api/exceptions","title":"Exceptions","description":"Exceptions","source":"@site/docs/api/exceptions.md","sourceDirName":"api","slug":"/api/exceptions","permalink":"/react-native-health-connect/docs/api/exceptions","draft":false,"unlisted":false,"editUrl":"https://github.com/matinzd/react-native-health-connect/tree/main/docs/docs/api/exceptions.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Exceptions"},"sidebar":"tutorialSidebar","previous":{"title":"Background Access Permission","permalink":"/react-native-health-connect/docs/api/methods/backgroundAccessPermission"},"next":{"title":"Contributing","permalink":"/react-native-health-connect/docs/contributing"}}');var t=i(4848),o=i(8453);const r={sidebar_position:3,title:"Exceptions"},c=void 0,h={},a=[{value:"Exceptions",id:"exceptions",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"exceptions",children:"Exceptions"}),"\n",(0,t.jsx)(n.p,{children:"The SDK throws exceptions for operations when an issue is encountered and you should make sure that these are appropriately caught and handled. Each exception contains a code and a message that describes the error. In general, the following exceptions may occur:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"PERMISSION_ERROR"})," - This exception is thrown when the SDK does not have the required permissions to perform the operation. You need to define nessesary permissions inside your application manifest as described ",(0,t.jsx)(n.a,{href:"/react-native-health-connect/docs/permissions",children:"here"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"SDK_VERSION_ERROR"})," - This exception is thrown when the SDK version is incompatible with the service or the operation being performed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"IO_EXCEPTION"})," - This exception is thrown when there is an issue with input/output operations, such as file reading or writing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"SERVICE_UNAVAILABLE"})," - This exception is thrown when the service that the SDK is trying to connect to is unavailable on device or not supported."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ARGUMENT_VALIDATION_ERROR"})," - This exception is thrown when one or more of the arguments passed to a method is invalid."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"UNDERLYING_ERROR"})," - This exception is thrown when there is an error with the underlying service or technology the SDK is using."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"INVALID_RECORD_TYPE"})," - This exception is thrown when the type of record passed to a method is not valid."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CLIENT_NOT_INITIALIZED"})," - This exception is thrown when the SDK client has not been properly initialized."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"INVALID_TEMPERATURE"})," - This exception is thrown when an invalid temperature value is passed to a method."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"INVALID_ENERGY"})," - This exception is thrown when an invalid energy value is passed to a method."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"INVALID_BLOOD_GLUCOSE_LEVEL"})," - This exception is thrown when an invalid blood glucose value is passed to a method."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"INVALID_BLOOD_PRESSURE"})," - This exception is thrown when an invalid blood pressure value is passed to a method."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"INVALID_MASS"})," - This exception is thrown when an invalid mass value is passed to a method."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AGGREGATION_NOT_SUPPORTED"})," - This exception is thrown for some records that does not support aggregation metrics."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"UNKNOWN_ERROR"})," - This exception is thrown when the SDK encounters an error that is not covered by any other specific exception."]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var s=i(6540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);