"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[508],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>y});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=d(r),u=o,y=p["".concat(l,".").concat(u)]||p[u]||m[u]||i;return r?n.createElement(y,a(a({ref:t},s),{},{components:r})):n.createElement(y,a({ref:t},s))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:o,a[1]=c;for(var d=2;d<i;d++)a[d]=r[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3915:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var n=r(7462),o=(r(7294),r(3905));const i={title:"deleteRecordsByTimeRange"},a="deleteRecordsByTimeRange",c={unversionedId:"api/methods/deleteRecordsByTimeRange",id:"api/methods/deleteRecordsByTimeRange",title:"deleteRecordsByTimeRange",description:"Deletes one or more record by their identifiers. Deletion of multiple record is executed in single transaction - if one fails, none is deleted.",source:"@site/docs/api/methods/12-deleteRecordsByTimeRange.md",sourceDirName:"api/methods",slug:"/api/methods/deleteRecordsByTimeRange",permalink:"/react-native-health-connect/docs/api/methods/deleteRecordsByTimeRange",draft:!1,editUrl:"https://github.com/matinzd/react-native-health-connect/tree/main/docs/docs/api/methods/12-deleteRecordsByTimeRange.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{title:"deleteRecordsByTimeRange"},sidebar:"tutorialSidebar",previous:{title:"aggregateGroupByPeriod",permalink:"/react-native-health-connect/docs/api/methods/aggregateGroupByPeriod"},next:{title:"deleteRecordsByUuids",permalink:"/react-native-health-connect/docs/api/methods/deleteRecordsByUuids"}},l={},d=[],s={toc:d};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deleterecordsbytimerange"},(0,o.kt)("inlineCode",{parentName:"h1"},"deleteRecordsByTimeRange")),(0,o.kt)("p",null,"Deletes one or more record by their identifiers. Deletion of multiple record is executed in single transaction - if one fails, none is deleted."),(0,o.kt)("h1",{id:"method"},"Method"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"deleteRecordsByTimeRange(\n    recordType: RecordType,\n    timeRangeFilter: TimeRangeFilter\n): Promise<void>\n")),(0,o.kt)("h1",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { deleteRecordsByTimeRange } from 'react-native-health-connect';\n\n// ...\ndeleteRecordsByTimeRange('ActiveCaloriesBurned', {\n  operator: 'between',\n  startTime: '2023-01-09T12:00:00.405Z',\n  endTime: '2023-01-09T23:53:15.405Z',\n});\n")))}p.isMDXComponent=!0}}]);